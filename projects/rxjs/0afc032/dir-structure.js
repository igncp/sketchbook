var d = diagrams.box.generateDefinition,
  c = diagrams.box.generateContainer,
  s = diagrams.shared.get;

diagrams.box({
  name: s('project') + ' dir structure',
  body: [d('dist'),
    c('doc', [
      c('api', [
        d("config"),
        c('core', [
          d("operators"),
        ]),
        d("disposables"),
        d("helpers"),
        d("schedulers"),
        d("subjects"),
        d("testing"),
      ]),
      d("contributing"),
      c('designguidelines', [
        d("images"),
      ]),
      d("gettingstarted"),
      d("howdoi"),
      c('libraries', [
        d("core"),
        d("lite"),
        d("main"),
      ]),
      c('mapping', [
        d("async"),
        d("bacon.js"),
        d("highland"),
      ]),
    ]),
    c('examples', [
      d("alphabetinvasion"),
      d("animationtest"),
      c('assets', [
        c('bootstrap', [
          d("css"),
          d("img"),
          d("js"),
        ]),
        d("d3"),
        d("jquery"),
      ]),
      d("autocomplete"),
      d("backpressure"),
      d("canvaspaint"),
      c('crop', [
        d("images"),
      ]),
      d("d3"),
      d("databinding"),
      d("dragndrop"),
      d("followthemouse"),
      d("konamicode"),
      d("letterrcount"),
      d("longstacktraces"),
      c('mario', [
        d("img"),
      ]),
      c('pacman-unicode', [
        d("unicodetiles"),
      ]),
      c('requirejs', [
        c('js', [
          d("app"),
          d("lib"),
        ]),
      ]),
      d("simpledatabinding"),
      d("speech"),
      d("stockserver"),
      d("tessel"),
      c('testing', [
        c('jasmine', [
          c('lib', [
            d("jasmine-1.3.1"),
          ]),
          d("spec"),
        ]),
        d("nodejs"),
        d("qunit"),
      ]),
      d("timeflies"),
      c('worzone', [
        d("audio"),
        d("images"),
        d("lib"),
      ]),
      d("wsh"),
    ]),
    d("logos"),
    c('modules', [
      d("rx-lite"),
      d("rx-lite-aggregates"),
      d("rx-lite-aggregates-compat"),
      d("rx-lite-async"),
      d("rx-lite-async-compat"),
      d("rx-lite-backpressure"),
      d("rx-lite-backpressure-compat"),
      d("rx-lite-coincidence"),
      d("rx-lite-coincidence-compat"),
      d("rx-lite-compat"),
      d("rx-lite-experimental"),
      d("rx-lite-experimental-compat"),
      d("rx-lite-extras"),
      d("rx-lite-extras-compat"),
      d("rx-lite-joinpatterns"),
      d("rx-lite-joinpatterns-compat"),
      d("rx-lite-testing"),
      d("rx-lite-testing-compat"),
      d("rx-lite-time"),
      d("rx-lite-time-compat"),
      d("rx-lite-virtualtime"),
      d("rx-lite-virtualtime-compat"),
    ]),
    c('nuget', [
      d("RxJS-Aggregates"),
      d("RxJS-All"),
      d("RxJS-Async"),
      d("RxJS-BackPressure"),
      d("RxJS-Binding"),
      d("RxJS-Coincidence"),
      d("RxJS-Complete"),
      d("RxJS-Experimental"),
      d("RxJS-JoinPatterns"),
      d("RxJS-Lite"),
      d("RxJS-Main"),
      d("RxJS-Testing"),
      d("RxJS-Time"),
      d("RxJS-VirtualTime"),
    ]),
    c('src', [
      c('core', [
        d("backpressure"),
        d("concurrency"),
        d("disposables"),
        d("expressions"),
        d("headers"),
        d("internal"),
        d("joins"),
        c('linq', [
          d("enumerable"),
          d("observable"),
        ]),
        d("longstacktraces"),
        c('perf', [
          d("operators"),
        ]),
        d("subjects"),
        d("testing"),
      ]),
      c('modular', [
        d("compat"),
        c('modern', [
          d("internal"),
          c('observable', [
            d("internal"),
          ]),
        ]),
      ]),
    ]),
    c('tests', [
      d("concurrency"),
      d("core"),
      d("disposables"),
      d("helpers"),
      d("internal"),
      d("observable"),
      c('perf', [
        d("old"),
        d("operators"),
        d("vendor"),
      ]),
      d("subjects"),
      d("vendor"),
    ]),
    d("ts"),
  ]
});
